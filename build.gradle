buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    // ----- 1) Asciidoctor : gradle plugins > asciidoctor task 추가

}

group = 'com'
version = '0.0.1'


java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

// ###### Character Encoding ##############################################
compileJava {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
// ###### Character Encoding ##############################################


repositories {
    mavenCentral()
}


// ###### Profile (세팅 위치 application.yml > spring.profile.active) ###############
bootRun {
    // Profile 세팅
    String activeProfile = System.properties['spring.profiles.active']
    if (activeProfile != "prod" && activeProfile == null) {
        activeProfile = "dev";
    }
    systemProperty('spring.profiles.active', activeProfile)
}
// ###### Profile (세팅 위치 application.yml > spring.profile.active) ###############


// ###### Asciidoctor #################################################################
ext { // ---- 3) Asciidoctor
    // project 객체에서 사용할 custom extra property 설정 코드블록
    // "블록 내에 설정한 변수"는 스크립트 내에서 활용할 수 있다.(메소드는 아님)
    snippetsDir = file('build/generated-snippets') // 문서 저장 위치
    set('snippetsDir', file("build/generated-snippets"))
}

configurations {
    asciidoctorExtensions // dependencies > asciidoctorExtensions 룰 Configuration 내에 지정
    runtimeClassPath {
        extendsFrom developmentOnly
    }
}

asciidoctor { // --- 5 ) Asciidoctor
    doFirst { // 해당 task를 수행할 때 가장 먼저 수행한는 블록
        delete file('src/main/resources/static/docs') // 문서 중복 방지 (신규 문서 생성 시, 이전 문서 삭제)
    }
    configurations 'asciidoctorExtensions'
    // asciidoctor에서 asciidoctorExtensions 를 configurations 으로서 사용하도록 설정
    baseDirFollowsSourceFile() //  .adoc 파일에서는 다른 .adoc 파일을 include하여 사용 시, 경로 동일하게 baseDir으로서 설정
    dependsOn test // dependsOn: task가 test task에 의존한다는 의미 => test task 완료 시, asciidoctor 수행
    inputs.dir snippetsDir // asciidoctor > converting 수행을 위한 snippet 경로를 input.dir로 지정
}


test { // // ---- 4) Asciidoctor : test 수행 내용 지정
    //##############################################################
    useJUnitPlatform() // ! <--- 빌드 시, 포함하면 TEST 제대로 수행안됨
    //##############################################################
    outputs.dir snippetsDir
}

tasks.register('copyDocument', Copy) {
    //  배포용 Jar파일을 생성하기 전 resources/static에 asciidoctor 결과를 복사하기 위한 task이다.
    // 생성된 docs 파일을 build시 static 아래에 docs로 복사
    dependsOn asciidoctor
    from file("build/docs/asciidoc") // war 설정
    into file("src/main/resources/static/docs")
}

build { // --- 8 ) Asciidoctor
    dependsOn copyDocument
    // build task의 copyDocument에 대한 의존성을 명시 => build task 실행 시 상위 task인 copyDocument가 수행됨
}

// ###### Asciidoctor #################################################################


//// ######################################### Asciidoctor ####################################################### J A R
bootJar {
    dependsOn asciidoctor
    copy {
        from file("src/build/asciidoc")
        into file("src/main/resources/static/docs")
        finalizedBy 'copyDocument'
    }
}
//// ######################################### Asciidoctor ####################################################### J A R


dependencies {


    // Email
    implementation 'org.springframework.boot:spring-boot-starter-mail'


    // Auth
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.auth0:java-jwt:3.19.0'


    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // QueryDsl (Spring boot 3.x)
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // WEB
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'

    // DB
    runtimeOnly 'org.postgresql:postgresql:42.6.0'
    implementation 'com.h2database:h2:2.2.220'


    // FILE
    // https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload
    implementation 'commons-fileupload:commons-fileupload:1.4'


    // UTIL
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok' // 테스트 의존성 추가
    testAnnotationProcessor 'org.projectlombok:lombok' // 테스트 의존성 추가

    implementation 'org.modelmapper:modelmapper:3.1.1'
    implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'com.google.code.findbugs:jsr305:3.0.2' //  @Nullable 어노테이션의 when 속성에 대한 값을 처리


    // HTTP
    implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.9'

    // REST DOC
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc" // mock용
    asciidoctorExtensions "org.springframework.restdocs:spring-restdocs-asciidoctor"
    testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'
    // webtestclient용

    // LOG (sprngboot 3.x)
    implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0"


    // Json Column 사용
    implementation 'io.hypersistence:hypersistence-utils-hibernate-60:3.3.1'
    implementation 'com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations'

    // Excel
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.3'
    // Apache POI - Java API To Access Microsoft Format Files


    // TEST
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    // ---- 2) Asciidoctor: Spring restdocs 의존성 추가
    // TEST > JUNIT5
    testImplementation(platform("org.junit:junit-bom:5.10.2"))
    testRuntimeOnly("org.junit.platform:junit-platform-launcher") {
        because("Only needed to run tests in a version of IntelliJ IDEA that bundles older versions")
    }
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine")
}


// ###### QueryDSL ################################################### // REF. https://lemontia.tistory.com/1089
def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile // springboot 3.x
clean {
    delete file(querydslDir)
}
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslDir)
}
